import React, { useState } from 'react';
import { Search, Heart, BookOpen, TrendingUp, Users, Shield, ArrowRight, Loader2, ExternalLink, ChevronDown, ChevronUp, AlertTriangle, CheckCircle, XCircle, AlertCircle } from 'lucide-react';

export default function CancerNutritionAI() {
  const [query, setQuery] = useState('');
  const [isSearching, setIsSearching] = useState(false);
  const [results, setResults] = useState(null);
  const [activeTab, setActiveTab] = useState('safety');
  const [expandedSources, setExpandedSources] = useState({});

  const foodExamples = [
    "Can cancer patients eat raw fish/sushi?",
    "Is turmeric safe during chemotherapy?",
    "Can I eat grapefruit while on cancer medication?",
    "Are probiotics safe for cancer patients?",
    "Can cancer patients drink green tea?",
    "Is it safe to eat leafy greens during treatment?"
  ];

  const mockResults = {
    foodItem: "Raw fish/sushi",
    safetyRating: "HIGH RISK",
    overallScore: 2.1,
    maxScore: 10,
    recommendation: "AVOID",
    summary: "Raw fish poses significant foodborne illness risks for immunocompromised cancer patients. Multiple studies show increased infection rates, particularly from Salmonella, Listeria, and parasites.",
    
    safety: {
      riskLevel: "High",
      primaryConcerns: [
        "Foodborne pathogens (Salmonella, Listeria, E. coli)",
        "Parasitic infections (Anisakis, tapeworms)",
        "Compromised immune system cannot fight infections effectively",
        "Risk of severe complications requiring hospitalization"
      ],
      safeAlternatives: [
        "Fully cooked fish (internal temp 145°F/63°C)",
        "Canned fish products",
        "Cooked sushi (California rolls with cooked crab)",
        "Vegetarian sushi options"
      ]
    },

    evidence: [
      {
        title: "Foodborne illness in immunocompromised cancer patients",
        authors: "Johnson et al.",
        year: 2023,
        journal: "Journal of Clinical Oncology",
        finding: "Cancer patients consuming raw fish had 5.2x higher rate of foodborne illness compared to cooked fish consumers",
        peerReviewScore: 9.2,
        reproducibilityScore: 8.8,
        overallScore: 9.0,
        quality: "Excellent",
        participants: 1247,
        studyType: "Prospective Cohort",
        followUpTime: "24 months",
        conflictsOfInterest: "None declared"
      },
      {
        title: "Microbial contamination in commercial sushi",
        authors: "Martinez-Lopez et al.",
        year: 2022,
        journal: "Food Microbiology",
        finding: "47% of sushi samples contained pathogenic bacteria above safe levels",
        peerReviewScore: 8.1,
        reproducibilityScore: 7.9,
        overallScore: 8.0,
        quality: "High",
        participants: 856,
        studyType: "Cross-sectional",
        followUpTime: "6 months",
        conflictsOfInterest: "One author consultant for food safety company"
      },
      {
        title: "Dietary guidelines for cancer patients during treatment",
        authors: "Thompson et al.",
        year: 2024,
        journal: "Cancer Treatment Reviews",
        finding: "Raw and undercooked foods associated with 3-fold increase in treatment delays due to infections",
        peerReviewScore: 8.9,
        reproducibilityScore: 6.5,
        overallScore: 7.7,
        quality: "High",
        participants: 2100,
        studyType: "Meta-analysis",
        followUpTime: "N/A",
        conflictsOfInterest: "Research funded by National Cancer Institute"
      }
    ],

    guidelines: [
      {
        organization: "American Cancer Society",
        recommendation: "Avoid raw fish",
        strength: "Strong",
        reasoning: "High risk of foodborne illness in immunocompromised patients"
      },
      {
        organization: "National Cancer Institute",
        recommendation: "Cook all fish to 145°F",
        strength: "Strong",
        reasoning: "Eliminates harmful bacteria and parasites"
      },
      {
        organization: "Academy of Nutrition and Dietetics",
        recommendation: "Avoid during active treatment",
        strength: "Moderate",
        reasoning: "Precautionary approach for vulnerable patients"
      }
    ],

    interactions: {
      withTreatments: [
        {
          treatment: "Chemotherapy",
          risk: "High",
          details: "Chemotherapy suppresses immune system, making foodborne infections more severe"
        },
        {
          treatment: "Radiation Therapy",
          risk: "Moderate",
          details: "May affect digestive system's ability to handle pathogens"
        },
        {
          treatment: "Immunotherapy",
          risk: "High",
          details: "Immune system alterations increase infection susceptibility"
        }
      ]
    }
  };

  const handleSearch = async () => {
    if (!query.trim()) return;
    
    setIsSearching(true);
    await new Promise(resolve => setTimeout(resolve, 2500));
    setResults(mockResults);
    setIsSearching(false);
  };

  const toggleSource = (index) => {
    setExpandedSources(prev => ({
      ...prev,
      [index]: !prev[index]
    }));
  };

  const getScoreColor = (score) => {
    if (score >= 8.5) return 'text-green-600 bg-green-50 border-green-200';
    if (score >= 7.0) return 'text-blue-600 bg-blue-50 border-blue-200';
    if (score >= 5.0) return 'text-yellow-600 bg-yellow-50 border-yellow-200';
    return 'text-red-600 bg-red-50 border-red-200';
  };

  const getSafetyIcon = (rating) => {
    switch(rating) {
      case 'SAFE': return <CheckCircle className="w-6 h-6 text-green-500" />;
      case 'CAUTION': return <AlertCircle className="w-6 h-6 text-yellow-500" />;
      case 'HIGH RISK': return <XCircle className="w-6 h-6 text-red-500" />;
      default: return <AlertTriangle className="w-6 h-6 text-gray-500" />;
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b border-gray-100">
        <div className="max-w-6xl mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-gradient-to-br from-blue-600 to-purple-600 rounded-xl flex items-center justify-center">
                <Heart className="w-6 h-6 text-white" />
              </div>
              <div>
                <h1 className="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                  CancerNutrition.ai
                </h1>
                <p className="text-sm text-gray-600">Evidence-based food safety for cancer patients</p>
              </div>
            </div>
            <div className="text-right">
              <p className="text-xs text-gray-500">Always consult your oncologist</p>
              <p className="text-xs text-gray-500">before making dietary changes</p>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-6xl mx-auto px-6 py-8">
        {/* Search Section */}
        <div className="bg-white rounded-2xl shadow-lg p-8 mb-8">
          <div className="text-center mb-8">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              Is this food safe for cancer patients?
            </h2>
            <p className="text-lg text-gray-600">
              Get evidence-based safety ratings with peer-reviewed research scores
            </p>
          </div>

          <div className="max-w-3xl mx-auto">
            <div className="relative">
              <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
              <input
                type="text"
                value={query}
                onChange={(e) => setQuery(e.target.value)}
                onKeyPress={(e) => e.key === 'Enter' && handleSearch()}
                placeholder="Enter a food item... (e.g., raw fish, grapefruit, turmeric)"
                className="w-full pl-12 pr-32 py-4 text-lg border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:outline-none"
              />
              <button
                onClick={handleSearch}
                disabled={isSearching || !query.trim()}
                className="absolute right-2 top-1/2 transform -translate-y-1/2 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-2 rounded-lg font-medium hover:shadow-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2"
              >
                {isSearching ? (
                  <Loader2 className="w-4 h-4 animate-spin" />
                ) : (
                  <>
                    <span>Analyze</span>
                    <ArrowRight className="w-4 h-4" />
                  </>
                )}
              </button>
            </div>

            <div className="mt-6">
              <p className="text-sm text-gray-500 mb-3">Common questions:</p>
              <div className="flex flex-wrap gap-2">
                {foodExamples.map((example, index) => (
                  <button
                    key={index}
                    onClick={() => setQuery(example)}
                    className="text-sm bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-2 rounded-lg transition-colors"
                  >
                    {example}
                  </button>
                ))}
              </div>
            </div>
          </div>
        </div>

        {/* Results Section */}
        {results && (
          <div className="space-y-6">
            {/* Safety Overview Card */}
            <div className="bg-white rounded-2xl shadow-lg overflow-hidden">
              <div className="bg-gradient-to-r from-blue-600 to-purple-600 text-white p-6">
                <div className="flex items-center justify-between">
                  <div>
                    <h3 className="text-2xl font-bold mb-2">{results.foodItem}</h3>
                    <p className="opacity-90">Safety Analysis for Cancer Patients</p>
                  </div>
                  <div className="text-right">
                    <div className="flex items-center space-x-2 mb-2">
                      {getSafetyIcon(results.safetyRating)}
                      <span className="text-xl font-bold">{results.safetyRating}</span>
                    </div>
                    <div className="text-sm opacity-90">Overall Evidence Score</div>
                    <div className="text-2xl font-bold">{results.overallScore}/10</div>
                  </div>
                </div>
              </div>

              {/* Quick Summary */}
              <div className="p-6 bg-gray-50 border-b">
                <div className="flex items-start space-x-4">
                  <div className={`px-4 py-2 rounded-full font-bold text-sm ${
                    results.recommendation === 'AVOID' ? 'bg-red-100 text-red-800' :
                    results.recommendation === 'CAUTION' ? 'bg-yellow-100 text-yellow-800' :
                    'bg-green-100 text-green-800'
                  }`}>
                    {results.recommendation}
                  </div>
                  <p className="text-gray-700 flex-1">{results.summary}</p>
                </div>
              </div>

              {/* Tab Navigation */}
              <div className="border-b border-gray-200">
                <nav className="flex space-x-8 px-6">
                  {[
                    { id: 'safety', label: 'Safety Profile', icon: Shield },
                    { id: 'evidence', label: 'Research Evidence', icon: BookOpen },
                    { id: 'guidelines', label: 'Clinical Guidelines', icon: Users },
                    { id: 'interactions', label: 'Treatment Interactions', icon: AlertTriangle }
                  ].map(({ id, label, icon: Icon }) => (
                    <button
                      key={id}
                      onClick={() => setActiveTab(id)}
                      className={`py-4 px-2 border-b-2 font-medium text-sm flex items-center space-x-2 ${
                        activeTab === id
                          ? 'border-blue-500 text-blue-600'
                          : 'border-transparent text-gray-500 hover:text-gray-700'
                      }`}
                    >
                      <Icon className="w-4 h-4" />
                      <span>{label}</span>
                    </button>
                  ))}
                </nav>
              </div>

              {/* Tab Content */}
              <div className="p-6">
                {activeTab === 'safety' && (
                  <div className="space-y-6">
                    <div>
                      <h4 className="text-xl font-semibold mb-4 flex items-center space-x-2">
                        <AlertTriangle className="w-5 h-5 text-red-500" />
                        <span>Primary Risk Factors</span>
                      </h4>
                      <div className="space-y-3">
                        {results.safety.primaryConcerns.map((concern, index) => (
                          <div key={index} className="flex items-start space-x-3 p-4 bg-red-50 border border-red-200 rounded-lg">
                            <XCircle className="w-5 h-5 text-red-500 mt-0.5 flex-shrink-0" />
                            <p className="text-red-800">{concern}</p>
                          </div>
                        ))}
                      </div>
                    </div>

                    <div>
                      <h4 className="text-xl font-semibold mb-4 flex items-center space-x-2">
                        <CheckCircle className="w-5 h-5 text-green-500" />
                        <span>Safe Alternatives</span>
                      </h4>
                      <div className="space-y-3">
                        {results.safety.safeAlternatives.map((alternative, index) => (
                          <div key={index} className="flex items-start space-x-3 p-4 bg-green-50 border border-green-200 rounded-lg">
                            <CheckCircle className="w-5 h-5 text-green-500 mt-0.5 flex-shrink-0" />
                            <p className="text-green-800">{alternative}</p>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                )}

                {activeTab === 'evidence' && (
                  <div className="space-y-4">
                    <div className="mb-6">
                      <h4 className="text-xl font-semibold mb-2">Research Quality Scoring</h4>
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
                        <div className="bg-blue-50 p-4 rounded-lg">
                          <h5 className="font-medium mb-2">Peer Review Score (0-10)</h5>
                          <p className="text-gray-600">Based on journal impact factor, reviewer expertise, and editorial rigor</p>
                        </div>
                        <div className="bg-purple-50 p-4 rounded-lg">
                          <h5 className="font-medium mb-2">Reproducibility Score (0-10)</h5>
                          <p className="text-gray-600">Sample size, methodology transparency, and replication potential</p>
                        </div>
                      </div>
                    </div>

                    {results.evidence.map((study, index) => (
                      <div key={index} className="border border-gray-200 rounded-lg p-5">
                        <div className="flex items-start justify-between mb-3">
                          <div className="flex-1">
                            <h5 className="font-semibold text-gray-900 mb-1">{study.title}</h5>
                            <p className="text-sm text-gray-600">
                              {study.authors} • {study.journal} • {study.year}
                            </p>
                          </div>
                          <div className="flex items-center space-x-2 ml-4">
                            <div className={`px-3 py-1 rounded-lg border ${getScoreColor(study.overallScore)}`}>
                              <span className="font-bold">{study.overallScore}/10</span>
                            </div>
                            <button
                              onClick={() => toggleSource(index)}
                              className="text-gray-400 hover:text-gray-600"
                            >
                              {expandedSources[index] ? <ChevronUp className="w-4 h-4" /> : <ChevronDown className="w-4 h-4" />}
                            </button>
                          </div>
                        </div>
                        
                        <p className="text-gray-700 mb-3 font-medium">{study.finding}</p>
                        
                        <div className="grid grid-cols-2 gap-4 mb-3">
                          <div className="text-sm">
                            <span className="text-gray-600">Peer Review Score:</span>
                            <span className="ml-2 font-semibold text-blue-600">{study.peerReviewScore}/10</span>
                          </div>
                          <div className="text-sm">
                            <span className="text-gray-600">Reproducibility:</span>
                            <span className="ml-2 font-semibold text-purple-600">{study.reproducibilityScore}/10</span>
                          </div>
                        </div>
                        
                        {expandedSources[index] && (
                          <div className="bg-gray-50 rounded-lg p-4 mt-3 space-y-3">
                            <div className="grid grid-cols-2 gap-4 text-sm">
                              <div>
                                <span className="font-medium text-gray-600">Study Type:</span>
                                <span className="ml-2 text-gray-800">{study.studyType}</span>
                              </div>
                              <div>
                                <span className="font-medium text-gray-600">Participants:</span>
                                <span className="ml-2 text-gray-800">{study.participants}</span>
                              </div>
                              <div>
                                <span className="font-medium text-gray-600">Follow-up:</span>
                                <span className="ml-2 text-gray-800">{study.followUpTime}</span>
                              </div>
                              <div>
                                <span className="font-medium text-gray-600">Conflicts:</span>
                                <span className="ml-2 text-gray-800">{study.conflictsOfInterest}</span>
                              </div>
                            </div>
                            <button className="text-blue-600 hover:text-blue-700 text-sm font-medium flex items-center space-x-1">
                              <span>View full study</span>
                              <ExternalLink className="w-3 h-3" />
                            </button>
                          </div>
                        )}
                      </div>
                    ))}
                  </div>
                )}

                {activeTab === 'guidelines' && (
                  <div className="space-y-4">
                    <h4 className="text-xl font-semibold mb-4">Professional Organization Guidelines</h4>
                    {results.guidelines.map((guideline, index) => (
                      <div key={index} className="border border-gray-200 rounded-lg p-5">
                        <div className="flex items-start justify-between mb-3">
                          <div>
                            <h5 className="font-semibold text-gray-900">{guideline.organization}</h5>
                            <p className="text-lg font-medium text-gray-800 mt-2">{guideline.recommendation}</p>
                          </div>
                          <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                            guideline.strength === 'Strong' ? 'bg-red-100 text-red-700' : 'bg-yellow-100 text-yellow-700'
                          }`}>
                            {guideline.strength} Recommendation
                          </span>
                        </div>
                        <p className="text-gray-600">{guideline.reasoning}</p>
                      </div>
                    ))}
                  </div>
                )}

                {activeTab === 'interactions' && (
                  <div className="space-y-4">
                    <h4 className="text-xl font-semibold mb-4">Cancer Treatment Interactions</h4>
                    {results.interactions.withTreatments.map((interaction, index) => (
                      <div key={index} className="border border-gray-200 rounded-lg p-5">
                        <div className="flex items-center justify-between mb-3">
                          <h5 className="font-semibold text-gray-900">{interaction.treatment}</h5>
                          <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                            interaction.risk === 'High' ? 'bg-red-100 text-red-700' :
                            interaction.risk === 'Moderate' ? 'bg-yellow-100 text-yellow-700' :
                            'bg-green-100 text-green-700'
                          }`}>
                            {interaction.risk} Risk
                          </span>
                        </div>
                        <p className="text-gray-700">{interaction.details}</p>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          </div>
        )}

        {/* Features Section */}
        {!results && (
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mt-12">
            <div className="bg-white rounded-xl p-6 shadow-lg">
              <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-4">
                <BookOpen className="w-6 h-6 text-blue-600" />
              </div>
              <h3 className="text-xl font-semibold mb-2">Rigorous Scoring</h3>
              <p className="text-gray-600">
                Every study rated on peer-review quality and reproducibility with transparent methodology.
              </p>
            </div>

            <div className="bg-white rounded-xl p-6 shadow-lg">
              <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-4">
                <Shield className="w-6 h-6 text-purple-600" />
              </div>
              <h3 className="text-xl font-semibold mb-2">Cancer-Specific</h3>
              <p className="text-gray-600">
                Focused on immunocompromised patients with treatment-specific risk assessments.
              </p>
            </div>

            <div className="bg-white rounded-xl p-6 shadow-lg">
              <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-4">
                <Heart className="w-6 h-6 text-green-600" />
              </div>
              <h3 className="text-xl font-semibold mb-2">Safe Alternatives</h3>
              <p className="text-gray-600">
                Not just warnings - practical alternatives to help maintain nutrition and quality of life.
              </p>
            </div>
          </div>
        )}

        {/* Disclaimer */}
        <div className="mt-12 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <div className="flex items-start space-x-3">
            <AlertTriangle className="w-5 h-5 text-yellow-600 mt-0.5 flex-shrink-0" />
            <div className="text-sm text-yellow-800">
              <p className="font-medium mb-1">Medical Disclaimer</p>
              <p>This tool provides research-based information but is not a substitute for professional medical advice. Always consult your oncologist, dietitian, or healthcare provider before making dietary changes during cancer treatment.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}